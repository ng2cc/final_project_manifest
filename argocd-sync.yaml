# Argo CD는 GitOps 패턴을 따르는 도구로
# Git 리포지토리에 저장된 애플리케이션 소스 코드와 클러스터 상태를 동기화

# apiVersion 및 kind는 애플리케이션을 정의하는 리소스
apiVersion:
  argoproj.io/v1alpha1
  # ArgoCD는 Application 리소스를 사용하여 GitOps 방식으로 애플리케이션을 배포하고 관리합니다.
kind: Application
metadata:
  name: web-was-app
  namespace: argocd
# spec은 애플리케이션의 구성을 정의
# project는 애플리케이션이 속하는 argoCD 프로젝트를 지정, 처음 설정한 기본 프로젝트를 default로 설정
spec:
  project: default
  # source : 애플리케이션의 소스 코드가 위치한 Git 리포리토리 정보를 정의
  # GIT에 있는 애플리케이션 소스를 가진 레포지토리의 정보를 가져온다
  source:
    repoURL: https://github.com/swordbillz/kube_manifest-4thWeekOfCloudOps.git
    # targetRevision 이란 애플리케이션 소스 코드의 특정 버전이나 브랜치를 지정합니다.
    # HEAD는 Git 리포지토리의 최신 커밋을 가리키며, 따라서 가장 최근의 소스 코드를 사용하도록 설정
    targetRevision: HEAD
    # 해당 깃 리포지토리 중 menifest 디렉토리에서 애플리케이션의 매니페스트 파일을 찾아 배포
    path: menifest
  # destination : 애플리케이션을 배포할 대상을 설정
  destination:
    server: https://kubernetes.default.svc
    namespace: argoCD
  # syncPolicy : 애플리케이션의 동기화 정책 설정 / syncOptions는 동기화 옵션을 설정하는 배열
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    # automated : 자동화된 동기화 정책을 설정
    # selfHeal : Argo CD는 배포된 애플리케이션의 상태를 주기적으로 모니터링하고 상태가 변경된 경우에 자동으로 해당 상태를 복구
    # prune : Argo CD는 Git 리포지토리의 변경 사항에 따라 필요하지 않은 리소스를 클러스터에서 자동으로 제거합니다.
    automated:
      selfHeal: true
      prune: true
